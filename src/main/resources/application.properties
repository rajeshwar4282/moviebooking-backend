#spring.data.mongodb.database=moviedb
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017



spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# MySQL Connection Properties
#spring.datasource.url=jdbc:mysql://database.c918bifp8fik.us-west-2.rds.amazonaws.com:3306/authdb?useSSL=false
#spring.datasource.username=admin
#spring.datasource.password=admin1234
#spring.sql.init.platform=mysql
#spring.jpa.show-sql:true
#
##
### JPA Properties
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=update
#
## JPA Properties
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.ddl-auto=update

server.port = 8083 
#swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html
#for authorization microservice call
auth.service.url = http://localhost:8080/api/v1.0/auth
server.error.include-message=always

#actuator config
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#for test
logging.level.org.apache.kafka.clients.NetworkClient=error
# output to a file--for logstash
logging.file.name=application-logs/application.log


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

